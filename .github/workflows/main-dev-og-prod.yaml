name: "Bygg og deploy til dev og prod"
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
env:
  "IMAGE": "ghcr.io/${{ github.repository }}:${{ github.sha }}"
  "ENABLE_SENTRY": "enabled"
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
jobs:
  "build":
    name: "build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-node@v3"
        with:
          node-version: "16"
          registry-url: "https://npm.pkg.github.com"
          cache: "yarn"
      - name: "Cache node_modules"
        id: "cache-node-modules"
        uses: "actions/cache@v3"
        with:
          path: 'node_modules'
          key: "${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}"
      - name: "install dependencies Yarn"
        if: "steps.cache-node-modules.outputs.cache-hit != 'true'"
        run: "yarn install --frozen-lockfile"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: "client tests"
        run: "yarn test"
      - name: "Bygg klient(yarn run build)"
        run: "yarn run build"
      - name: "Set up Docker Buildx"
        id: "buildx"
        uses: "docker/setup-buildx-action@v1"
      - name: "Login to GitHub Docker Registry"
        uses: "docker/login-action@v1"
        with:
          "registry": "ghcr.io"
          "username": "${{ github.actor }}"
          "password": "${{ secrets.GITHUB_TOKEN }}"
      - name: "Build and push Docker"
        uses: "docker/build-push-action@v2"
        with:
          context: .
          file: Dockerfile
          tags: "${{ env.IMAGE }}"
          push: "true"
          cache-from: "type=gha"
          cache-to: "type=gha,mode=max"
  "functionalTests":
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: "build"
    services:
      soknad:
        image: "${{ env.IMAGE }}"
        env:
          RUNTIME_ENVIRONMENT: "labs"
        ports:
          - 3000:3000
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: "16"
        registry-url: "https://npm.pkg.github.com"
        cache: "yarn"
    - name: Install dependencies
      run: yarn install
      env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: yarn playwright test
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
  "deployDev":
    name: "Deploy app to dev"
    needs: "build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Deploy to DEV"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          "CLUSTER": "dev-gcp"
          "RESOURCE": ".nais/nais.yaml"
          "VARS": ".nais/dev.yaml"
  "deployAppToProd":
    name: "Deploy app to prod"
    needs: "build"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Deploy to PROD"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          "APIKEY": "${{ secrets.NAIS_DEPLOY_APIKEY }}"
          "CLUSTER": "prod-gcp"
          "RESOURCE": ".nais/nais.yaml,.nais/prod-alerts.yaml"
          "VARS": ".nais/prod.yaml"
